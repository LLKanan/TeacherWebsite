{"ast":null,"code":"var _jsxFileName = \"/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/components/TableComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/DDB/listStudents';\nconst accessKey = {\n  key1: 'value1'\n};\nasync function getStudentData(accessKey) {\n  try {\n    // Make the API call with the POST method\n    const response = await fetch(apiEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(accessKey)\n    });\n\n    // Check if the response is ok (status code 200-299)\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    // Parse the JSON response\n    const responseData = await response.json();\n\n    // Store the JSON object\n    console.log('Data received from API:', responseData);\n\n    // You can now use the responseData object as needed\n    return responseData.body;\n  } catch (error) {\n    console.error('Error posting data:', error);\n  }\n}\nconst TableComponent = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data from your API or use a static JSON object\n    const fetchData = async () => {\n      const studentData = await getStudentData(accessKey);\n      const jsonData = JSON.parse(studentData);\n\n      // Transform the data to remove the \"S\" part\n      const transformedData = jsonData.map(item => {\n        const transformedItem = {};\n        for (const key in item) {\n          transformedItem[key] = item[key].S;\n        }\n        return transformedItem;\n      });\n      setData(transformedData);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"styled-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: data.length > 0 && Object.keys(data[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.values(item).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n_s(TableComponent, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiEndpoint","accessKey","key1","getStudentData","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","console","log","error","TableComponent","_s","data","setData","fetchData","studentData","jsonData","parse","transformedData","map","item","transformedItem","key","S","className","children","length","Object","keys","fileName","_jsxFileName","lineNumber","columnNumber","index","values","value","i","_c","$RefreshReg$"],"sources":["/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/components/TableComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/DDB/listStudents';\n\nconst accessKey = {\n  key1: 'value1'\n};\n\nasync function getStudentData(accessKey) {\n  try {\n      // Make the API call with the POST method\n      const response = await fetch(apiEndpoint, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(accessKey)\n      });\n\n      // Check if the response is ok (status code 200-299)\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Parse the JSON response\n      const responseData = await response.json();\n\n      // Store the JSON object\n      console.log('Data received from API:', responseData);\n\n      // You can now use the responseData object as needed\n      return responseData.body;\n  } catch (error) {\n      console.error('Error posting data:', error);\n  }\n}\n\nconst TableComponent = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // Fetch data from your API or use a static JSON object\n        const fetchData = async () => {\n            const studentData = await getStudentData(accessKey);\n            const jsonData = JSON.parse(studentData);\n\n            // Transform the data to remove the \"S\" part\n            const transformedData = jsonData.map(item => {\n                const transformedItem = {};\n                for (const key in item) {\n                    transformedItem[key] = item[key].S;\n                }\n                return transformedItem;\n            });\n\n            setData(transformedData);\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n      <table className=\"styled-table\">\n          <thead>\n              <tr>\n                  {data.length > 0 && Object.keys(data[0]).map((key) => (\n                      <th key={key}>{key}</th>\n                  ))}\n              </tr>\n          </thead>\n          <tbody>\n              {data.map((item, index) => (\n                  <tr key={index}>\n                      {Object.values(item).map((value, i) => (\n                          <td key={i}>{value}</td>\n                      ))}\n                  </tr>\n              ))}\n          </tbody>\n      </table>\n  );\n};\n\nexport default TableComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/components/js/main.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessTokenContext = /*#__PURE__*/createContext();\nexport function AccessTokenProvider({\n  children\n}) {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('accessToken');\n    if (storedToken) {\n      setAccessToken(storedToken);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AccessTokenContext.Provider, {\n    value: {\n      accessToken,\n      setAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(AccessTokenProvider, \"/xrtmJPCXv3vYgXhoOEInGM3amE=\");\n_c = AccessTokenProvider;\nexport function useAccessToken() {\n  _s2();\n  return useContext(AccessTokenContext);\n}\n_s2(useAccessToken, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function validateEmail(email) {\n  const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,7}$/;\n  return regex.test(email.toLowerCase());\n}\nexport function validatePassword(password) {\n  // Check if the password contains at least:\n  // 1. One number\n  // 2. One special character (from the provided list)\n  // 3. One uppercase letter\n  // 4. One lowercase letter\n\n  const hasNumber = /[0-9]/.test(password);\n  const hasSpecialChar = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\-\\\\/]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasLowercase = /[a-z]/.test(password);\n  return hasNumber && hasSpecialChar && hasUppercase && hasLowercase;\n}\nvar _c;\n$RefreshReg$(_c, \"AccessTokenProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AccessTokenContext","AccessTokenProvider","children","_s","accessToken","setAccessToken","storedToken","localStorage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAccessToken","_s2","validateEmail","email","regex","test","toLowerCase","validatePassword","password","hasNumber","hasSpecialChar","hasUppercase","hasLowercase","$RefreshReg$"],"sources":["/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/components/js/main.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AccessTokenContext = createContext();\n\nexport function AccessTokenProvider({ children }) {\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('accessToken');\n    if (storedToken) {\n      setAccessToken(storedToken);\n    }\n  }, []);\n\n  return (\n    <AccessTokenContext.Provider value={{ accessToken, setAccessToken }}>\n      {children}\n    </AccessTokenContext.Provider>\n  );\n}\n\nexport function useAccessToken() {\n  return useContext(AccessTokenContext);\n}\n\nexport function validateEmail(email) {\n  const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,7}$/;\n  return regex.test(email.toLowerCase());\n}\n\nexport function validatePassword(password) {\n  // Check if the password contains at least:\n  // 1. One number\n  // 2. One special character (from the provided list)\n  // 3. One uppercase letter\n  // 4. One lowercase letter\n\n  const hasNumber = /[0-9]/.test(password);\n  const hasSpecialChar = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\-\\\\/]/.test(password);\n  const hasUppercase = /[A-Z]/.test(password);\n  const hasLowercase = /[a-z]/.test(password);\n\n  return hasNumber && hasSpecialChar && hasUppercase && hasLowercase;\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASO,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAIF,WAAW,EAAE;MACfD,cAAc,CAACC,WAAW,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,kBAAkB,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EACjEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC;AAACX,EAAA,CAfeF,mBAAmB;AAAAc,EAAA,GAAnBd,mBAAmB;AAiBnC,OAAO,SAASe,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC/B,OAAOtB,UAAU,CAACK,kBAAkB,CAAC;AACvC;AAACiB,GAAA,CAFeD,cAAc;AAI9B,OAAO,SAASE,aAAaA,CAACC,KAAK,EAAE;EACnC,MAAMC,KAAK,GAAG,mDAAmD;EACjE,OAAOA,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,WAAW,CAAC,CAAC,CAAC;AACxC;AAEA,OAAO,SAASC,gBAAgBA,CAACC,QAAQ,EAAE;EACzC;EACA;EACA;EACA;EACA;;EAEA,MAAMC,SAAS,GAAG,OAAO,CAACJ,IAAI,CAACG,QAAQ,CAAC;EACxC,MAAME,cAAc,GAAG,mCAAmC,CAACL,IAAI,CAACG,QAAQ,CAAC;EACzE,MAAMG,YAAY,GAAG,OAAO,CAACN,IAAI,CAACG,QAAQ,CAAC;EAC3C,MAAMI,YAAY,GAAG,OAAO,CAACP,IAAI,CAACG,QAAQ,CAAC;EAE3C,OAAOC,SAAS,IAAIC,cAAc,IAAIC,YAAY,IAAIC,YAAY;AACpE;AAAC,IAAAb,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
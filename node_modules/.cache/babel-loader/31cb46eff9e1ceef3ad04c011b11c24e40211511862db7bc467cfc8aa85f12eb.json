{"ast":null,"code":"var _jsxFileName = \"/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/pages/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../components/css/main.css';\nimport { validateEmail, validatePassword } from '../components/js/main';\nimport emailIcon from '../components/assets/email.png';\nimport passwordIcon from '../components/assets/password.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let [emailError, setEmailError] = useState('');\n  let [passwordError, setPasswordError] = useState('');\n  let [serverError, setServerError] = useState('');\n  const apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/login';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //Validate email and password locally\n    let localValidation = true;\n    if (validateEmail(email) === false) {\n      setEmailError('Error: Email is invalid');\n      localValidation = false;\n    } else {\n      setEmailError('');\n    }\n\n    //Check passwords valid\n    if (validatePassword(password) !== true) {\n      setPasswordError('Error: Password is not valid');\n      localValidation = false;\n    } else {\n      setPasswordError('');\n    }\n    if (localValidation === false) {\n      return;\n    }\n    //Send Payload to API Gateway\n    const payload = {\n      username: email,\n      password: password\n    };\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('API call successful');\n        const data = await response.json();\n        console.log('Response data:', data);\n        if (JSON.parse(data.body).error) {\n          setServerError(JSON.parse(data.body).error);\n        } else {\n          window.location.href = '/teacher';\n        }\n      } else {\n        console.error('API call failed');\n        console.log('Response status:', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"emailError\",\n        className: \"error\",\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"passwordError\",\n        className: \"error\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"serverError\",\n      className: \"serverError\",\n      children: serverError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheader\",\n      children: [\"New User? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Click Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"/dSUjfJP3TDjBiY+ywdU6muhhRA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","validateEmail","validatePassword","emailIcon","passwordIcon","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","serverError","setServerError","apiEndpoint","handleSubmit","e","preventDefault","localValidation","payload","username","response","fetch","method","headers","body","JSON","stringify","ok","console","log","data","json","parse","error","window","location","href","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","id","to","onClick","_c","$RefreshReg$"],"sources":["/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/pages/login.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport {Link} from 'react-router-dom';\nimport '../components/css/main.css'\nimport { validateEmail, validatePassword } from '../components/js/main';\n\nimport emailIcon from '../components/assets/email.png'\nimport passwordIcon from '../components/assets/password.png'\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  let [emailError,setEmailError] = useState('');\n  let [passwordError,setPasswordError] = useState('');\n  let [serverError,setServerError] = useState('');\n\n  const apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/login';\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    //Validate email and password locally\n    let localValidation = true;\n    if (validateEmail(email) === false){\n      setEmailError('Error: Email is invalid');\n      localValidation = false;\n    }\n    else{\n      setEmailError('');\n    }\n\n    //Check passwords valid\n    if(validatePassword(password) !== true){\n      setPasswordError('Error: Password is not valid');\n      localValidation=false;\n    }\n    else{\n      setPasswordError('');\n\n    }\n    if (localValidation === false){\n      return\n    }\n    //Send Payload to API Gateway\n    const payload = {\n      username: email,\n      password: password\n    }\n\n    try {\n      const response = await fetch(apiEndpoint, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        console.log('API call successful');\n        const data = await response.json(); \n        console.log('Response data:', data);\n        if (JSON.parse(data.body).error){\n          setServerError(JSON.parse(data.body).error);\n        }\n        else{\n          window.location.href = '/teacher';\n        }\n        \n    } else {\n        console.error('API call failed');\n        console.log('Response status:', response.status);\n    }\n    } catch (error) {\n    console.error('An error occurred:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"text\">Login</div>\n      </div>\n      <div className=\"inputs\">\n        <div className=\"input\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <span id='emailError' className='error'>{emailError}</span>\n        <div className=\"input\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          \n        </div>\n      <span id='passwordError' className='error'>{passwordError}</span>\n      </div>\n      <span id='serverError' className='serverError'>{serverError}</span>\n      <div className=\"subheader\">\n        New User? <Link to=\"/signup\">Click Here!</Link>\n      </div>\n      <div className=\"submit-container\">\n        <button onClick={handleSubmit} className=\"submit\">\n          Login\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
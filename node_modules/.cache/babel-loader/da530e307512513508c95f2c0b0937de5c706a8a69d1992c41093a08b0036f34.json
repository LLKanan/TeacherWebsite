{"ast":null,"code":"var _jsxFileName = \"/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/pages/verify.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../components/css/main.css';\nimport { validateEmail } from '../components/js/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verify = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [confirmationCode, setConfirmationCode] = useState('');\n  let [emailError, setEmailError] = useState('');\n  let [confirmationError, setConfirmationError] = useState('');\n  const apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/verify';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //Validate email and password locally\n    if (validateEmail(email) === false) {\n      setEmailError('Error: Email is invalid');\n      return;\n    } else {\n      setEmailError('');\n    }\n\n    //Send Payload to API Gateway\n    const payload = {\n      username: email,\n      confirmationCode: confirmationCode\n    };\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        console.log('API call successful');\n        const data = await response.json();\n        console.log('Response data:', data);\n        const parsedBody = JSON.parse(response.body);\n        if (parsedBody.error) {\n          setConfirmationError('Error: ', parsedBody.error);\n        }\n      } else {\n        console.error('API call failed');\n        console.log('Response status:', response.status);\n        setConfirmationError('Error: ', response.status);\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"emailError\",\n          className: \"error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Confirmation Code\",\n          value: confirmationCode,\n          onChange: e => setConfirmationCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"confirmationError\",\n        className: \"error\",\n        children: confirmationError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Verify, \"87xynXIZED2YJYg4BWknsjjXap4=\");\n_c = Verify;\nexport default Verify;\nvar _c;\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"names":["React","useState","Link","validateEmail","jsxDEV","_jsxDEV","Verify","_s","email","setEmail","confirmationCode","setConfirmationCode","emailError","setEmailError","confirmationError","setConfirmationError","apiEndpoint","handleSubmit","e","preventDefault","payload","username","response","fetch","method","headers","body","JSON","stringify","ok","console","log","data","json","parsedBody","parse","error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","id","onClick","_c","$RefreshReg$"],"sources":["/home/benjangu/Projects/JobApps/Elastik/elastik-app/src/pages/verify.jsx"],"sourcesContent":["import React, {useState} from 'react'\nimport {Link} from 'react-router-dom';\nimport '../components/css/main.css'\nimport { validateEmail } from '../components/js/main';\n\nconst Verify = () => {\n  const [email, setEmail] = useState('');\n  const [confirmationCode, setConfirmationCode] = useState('');\n\n  let [emailError,setEmailError] = useState('');\n  let [confirmationError,setConfirmationError] = useState('');\n\n  const apiEndpoint = 'https://2a2tyby9f2.execute-api.ap-southeast-2.amazonaws.com/Test/verify';\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    //Validate email and password locally\n    if (validateEmail(email) === false){\n      setEmailError('Error: Email is invalid');\n      return\n    }\n    else{\n      setEmailError('');\n    }\n\n    //Send Payload to API Gateway\n    const payload = {\n      username: email,\n      confirmationCode: confirmationCode\n    }\n\n    try {\n      const response = await fetch(apiEndpoint, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        console.log('API call successful');\n        const data = await response.json(); \n        console.log('Response data:', data);\n        const parsedBody = JSON.parse(response.body);\n        if (parsedBody.error){\n          setConfirmationError('Error: ', parsedBody.error);\n        }\n    } else {\n        console.error('API call failed');\n        console.log('Response status:', response.status);\n        setConfirmationError('Error: ',response.status);\n    }\n    } catch (error) {\n    console.error('An error occurred:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"text\">Verify</div>\n        <div className=\"underline\"></div>\n      </div>\n      <div className=\"inputs\">\n        <div className=\"input\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <span id='emailError' className='error'>{emailError}</span>\n        </div>\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            placeholder=\"Confirmation Code\"\n            value={confirmationCode}\n            onChange={(e) => setConfirmationCode(e.target.value)}\n          />\n        </div>\n        <span id='confirmationError' className='error'>{confirmationError}</span>\n      </div>\n      <div className=\"submit-container\">\n        <button onClick={handleSubmit} className=\"submit\">\n          Verify\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Verify;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}